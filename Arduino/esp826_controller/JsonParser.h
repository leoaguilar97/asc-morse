#include <ArduinoJson.h>

String current_word = "";

void parseAppResponse(String json) {
  const size_t capacity = JSON_ARRAY_SIZE(0) + JSON_OBJECT_SIZE(5) + 60;
  DynamicJsonDocument doc(capacity);

  deserializeJson(doc, json);

  const char* msg = doc["msg"];
  const char* result = doc["result"];
  const char* current = doc["current"];
  current_word = current;
  int remaining = doc["remaining"];
}

void parseGraphResponse(String json) {
  const size_t capacity = JSON_ARRAY_SIZE(0) + 9 * JSON_ARRAY_SIZE(8) + JSON_OBJECT_SIZE(5) + 60;

  DynamicJsonDocument doc(capacity);

  deserializeJson(doc, json);

  JsonArray result = doc["result"];

  Serial.flush();
  
  JsonArray result_0 = result[0];
  Serial.print((byte)result_0[0]);
  Serial.print(",");
  Serial.print((byte)result_0[1]);
  Serial.print(",");
  Serial.print((byte)result_0[2]);
  Serial.print(",");
  Serial.print((byte)result_0[3]);
  Serial.print(",");
  Serial.print((byte)result_0[4]);
  Serial.print(",");
  Serial.print((byte)result_0[5]);
  Serial.print(",");
  Serial.print((byte)result_0[6]);
  Serial.print(",");
  Serial.print((byte)result_0[7]);
  Serial.print(",");
  delay(1000);
  Serial.flush();
  JsonArray result_1 = result[1];
  Serial.print((byte)result_1[0]);
  Serial.print(",");
  Serial.print((byte)result_1[1]);
  Serial.print(",");
  Serial.print((byte)result_1[2]);
  Serial.print(",");
  Serial.print((byte)result_1[3]);
  Serial.print(",");
  Serial.print((byte)result_1[4]);
  Serial.print(",");
  Serial.print((byte)result_1[5]);
  Serial.print(",");
  Serial.print((byte)result_1[6]);
  Serial.print(",");
  Serial.print((byte)result_1[7]);
  Serial.print(",");
  delay(1000);
  Serial.flush();
  JsonArray result_2 = result[2];
  Serial.print((byte)result_2[0]);
  Serial.print(",");
  Serial.print((byte)result_2[1]);
  Serial.print(",");
  Serial.print((byte)result_2[2]);
  Serial.print(",");
  Serial.print((byte)result_2[3]);
  Serial.print(",");
  Serial.print((byte)result_2[4]);
  Serial.print(",");
  Serial.print((byte)result_2[5]);
  Serial.print(",");
  Serial.print((byte)result_2[6]);
  Serial.print(",");
  Serial.print((byte)result_2[7]);
  Serial.print(",");
  delay(1000);
  Serial.flush();
  JsonArray result_3 = result[3];
  Serial.print((byte)result_3[0]);
  Serial.print(",");
  Serial.print((byte)result_3[1]);
  Serial.print(",");
  Serial.print((byte)result_3[2]);
  Serial.print(",");
  Serial.print((byte)result_3[3]);
  Serial.print(",");
  Serial.print((byte)result_3[4]);
  Serial.print(",");
  Serial.print((byte)result_3[5]);
  Serial.print(",");
  Serial.print((byte)result_3[6]);
  Serial.print(",");
  Serial.print((byte)result_3[7]);
  Serial.print(",");
  delay(1000);
  Serial.flush();
  JsonArray result_4 = result[4];
  Serial.print((byte)result_4[0]);
  Serial.print(",");
  Serial.print((byte)result_4[1]);
  Serial.print(",");
  Serial.print((byte)result_4[2]);
  Serial.print(",");
  Serial.print((byte)result_4[3]);
  Serial.print(",");
  Serial.print((byte)result_4[4]);
  Serial.print(",");
  Serial.print((byte)result_4[5]);
  Serial.print(",");
  Serial.print((byte)result_4[6]);
  Serial.print(",");
  Serial.print((byte)result_4[7]);
  Serial.print(",");
  delay(1000);
  Serial.flush();
  JsonArray result_5 = result[5];
  Serial.print((byte)result_5[0]);
  Serial.print(",");
  Serial.print((byte)result_5[1]);
  Serial.print(",");
  Serial.print((byte)result_5[2]);
  Serial.print(",");
  Serial.print((byte)result_5[3]);
  Serial.print(",");
  Serial.print((byte)result_5[4]);
  Serial.print(",");
  Serial.print((byte)result_5[5]);
  Serial.print(",");
  Serial.print((byte)result_5[6]);
  Serial.print(",");
  Serial.print((byte)result_5[7]);
  Serial.print(",");
  delay(1000);
  Serial.flush();
  JsonArray result_6 = result[6];
  Serial.print((byte)result_6[0]);
  Serial.print(",");
  Serial.print((byte)result_6[1]);
  Serial.print(",");
  Serial.print((byte)result_6[2]);
  Serial.print(",");
  Serial.print((byte)result_6[3]);
  Serial.print(",");
  Serial.print((byte)result_6[4]);
  Serial.print(",");
  Serial.print((byte)result_6[5]);
  Serial.print(",");
  Serial.print((byte)result_6[6]);
  Serial.print(",");
  Serial.print((byte)result_6[7]);
  Serial.print(",");
  delay(1000);
  Serial.flush();
  JsonArray result_7 = result[7];
  Serial.print((byte)result_7[0]);
  Serial.print(",");
  Serial.print((byte)result_7[1]);
  Serial.print(",");
  Serial.print((byte)result_7[2]);
  Serial.print(",");
  Serial.print((byte)result_7[3]);
  Serial.print(",");
  Serial.print((byte)result_7[4]);
  Serial.print(",");
  Serial.print((byte)result_7[5]);
  Serial.print(",");
  Serial.print((byte)result_7[6]);
  Serial.print(",");
  Serial.print((byte)result_7[7]);
  Serial.print(",");
}
